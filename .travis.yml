language: php
dist: bionic

notifications:
  email:
    recipients:
      - tomas.mikkelsen@aoe.com
      - stefan.rotsch@aoe.com
    on_success: never
    on_failure: never

before_install:
  # turn off XDebug for speed up
  - phpenv config-rm xdebug.ini || return 0

addons:
  apt:
    packages:
      - parallel
  sonarcloud:
    organization: "aoe-crawler"
    branches:
      - master
      - sonarqube
php:
  - '7.2'
  - '7.3'
  - '7.4'

env:
  # tested TYPO3 version
  - TYPO3_VERSION=^9.5
  - TYPO3_VERSION=^10.4
  - TYPO3_VERSION=dev-master

services:
  - mysql
  - docker

jdk:
  - oraclejdk8

cache:
  directories:
    - $HOME/.composer/cache
    - docker

before_script:
  # Installs nimut/typo3-complete
  - travis_wait 30 composer require --dev nimut/typo3-complete=$TYPO3_VERSION
  - export "TYPO3_PATH_WEB"=$PWD/.Build/Web;
  # Locating UnitTests.xml
  - export "UNIT_XML"='.Build/vendor/nimut/testing-framework/res/Configuration/UnitTests.xml'
  # Location FunctionalTests.xml
  - export "FUNCTIONAL_XML"='.Build/vendor/nimut/testing-framework/res/Configuration/FunctionalTests.xml'
  # Symlink TYPO3-Core
  - ln -nfs .Build/vendor/typo3/cms/typo3 typo3

script:
  # run tests by default
  # unit tests
  - .Build/bin/phpunit --colors -c $UNIT_XML Tests/Unit
  # functional tests
  - export typo3DatabaseName="typo3"
  - export typo3DatabaseHost="localhost"
  - export typo3DatabaseUsername="root"
  - export typo3DatabasePassword=""
  - .Build/bin/phpunit --whitelist Classes --colors -c $FUNCTIONAL_XML Tests/Functional

jobs:
  fast_finish: true
  allow_failures:
    - php: 7.3
    - php: 7.4
    - env: TYPO3_VERSION=dev-master
    - name: "PHPStan"
    - name: "Behaviour"
  include:
    -
      stage: test
      name: "PHP Lint"
      script:
        - find . -name \*.php ! -path "./.Build/*" ! -path "./scripts/*" ! -path "./typo3_src/*" | parallel --gnu php -d display_errors=stderr -l {} > /dev/null \;

    -
      stage: test
      name: "Tests Coverage"
      before_install:
        - echo "keep xdebug"
      script:
        - export typo3DatabaseName="typo3";
        - export typo3DatabaseHost="localhost";
        - export typo3DatabaseUsername="root";
        - export typo3DatabasePassword="";

        # Unit tests
        - .Build/bin/phpunit --whitelist Classes --coverage-clover=unittest-coverage.clover --colors -c $UNIT_XML Tests/Unit

        # Functional tests
        - .Build/bin/phpunit --whitelist Classes --coverage-clover=functional-coverage.clover --colors -c $FUNCTIONAL_XML Tests/Functional

      after_script:
        - wget https://scrutinizer-ci.com/ocular.phar
        - php ocular.phar code-coverage:upload --format=php-clover unittest-coverage.clover
        - php ocular.phar code-coverage:upload --format=php-clover functional-coverage.clover

    # Behaviour Tests
    -
      stage: test
      name: "Behaviour"
      php: 7.2
      env:
        - TYPO3_VERSION=^9.5
      before_script:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
        - sudo apt update
        - sudo apt install docker-ce
        - sudo curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        - sudo chmod +x /usr/local/bin/docker-compose
        - docker-compose --version
        - wget https://github.com/drud/ddev/releases/download/v1.13.1/ddev_linux.v1.13.1.tar.gz
        - tar vxzf ddev_linux.v1.13.1.tar.gz
        - sudo chmod +x ddev && sudo mv ddev /usr/local/bin/ddev
        - sudo chmod +x mkcert && sudo mv mkcert /usr/local/bin/mkcert
        - mkcert -install
        - ddev --version
      script:
        - cd .devbox
        - composer require aoepeople/crawler:dev-${TRAVIS_BRANCH}
        - ddev start
        - ddev exec bin/typo3cms install:fixfolderstructure
        - ddev exec bin/typo3cms install:extensionsetupifpossible
        - ddev exec bin/typo3cms cache:flush
        - cd .. # Going back to "root" directory
        - composer install
        - wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
        - chmod +x wait-for-it.sh
        - docker ps
        - ./wait-for-it.sh -t 60 127.0.0.1:80
        - ./wait-for-it.sh -t 60 127.0.0.1:443
        - ./wait-for-it.sh -t 60 localhost:4444
        - php .Build/bin/codecept run

    # Static Analysis
    -
      stage: static
      name: "Rector CI"
      php: 7.2
      env:
        - TYPO3_VERSION=^9.5
      script:
        - .Build/bin/rector process --dry-run --config rector-ci.yaml

    -
      stage: static
      name: "Coding Standards"
      php: 7.2
      env:
        - TYPO3_VERSION=^9.5
      script:
        - .Build/bin/ecs check

    -
      stage: static
      name: "PHPStan"
      php: 7.2
      env:
        - TYPO3_VERSION=^9.5
      script:
        - .Build/bin/phpstan analyse

    - stage: static
      name: "SonarCloud"
      if: type = push AND branch IN (master, sonarqube)
      php: 7.2
      env:
        - TYPO3_VERSION=^9.5
      before_install:
        - echo "keep xdebug"
        # Installs nimut/typo3-complete
        - travis_wait 30 composer require --dev nimut/typo3-complete=$TYPO3_VERSION
        - export "TYPO3_PATH_WEB"=$PWD/.Build/Web;
        # Locating UnitTests.xml and FunctionalTests.xml
        - export "UNIT_XML"='.Build/vendor/nimut/testing-framework/res/Configuration/UnitTests.xml'
        - export "FUNCTIONAL_XML"='.Build/vendor/nimut/testing-framework/res/Configuration/FunctionalTests.xml'
      install: skip
      script:
        - export typo3DatabaseName="typo3"
        - export typo3DatabaseHost="localhost"
        - export typo3DatabaseUsername="root"
        - export typo3DatabasePassword=""
        - mkdir -p .Logs/coverage .Logs/junit
        - git fetch --unshallow
        - composer install
        - .Build/bin/phpunit --whitelist Classes --coverage-php .Logs/coverage/unit_clover.cov --log-junit .Logs/junit/unit_junit.xml -c $UNIT_XML Tests/Unit
        - .Build/bin/phpunit --whitelist Classes --coverage-php .Logs/coverage/functional-coverage.cov --log-junit .Logs/junit/functional-junit.xml -c $FUNCTIONAL_XML Tests/Functional
        - composer require --no-progress --no-suggest --update-with-all-dependencies nimut/phpunit-merger;
          .Build/bin/phpunit-merger coverage .Logs/coverage/ .Logs/coverage.xml;
          .Build/bin/phpunit-merger log .Logs/junit/ .Logs/junit.xml;
        - >
          if [ -n "$SONAR_TOKEN" ]; then
            sonar-scanner -X
          fi

    # Deploy
    -
      stage: deploy
      name: "Ship to TER"
      if: tag IS present
      php: 7.2
      install: skip
      before_script: skip
      script:
        - |
          if [ -n "$TYPO3_ORG_USERNAME" ] && [ -n "$TYPO3_ORG_PASSWORD" ]; then
            echo -e "Preparing upload of release ${TRAVIS_TAG} to TER\n";
            # Install ter client
            composer global require helhum/ter-client
            # Build extension files
            composer extension-release
            # Upload
            TAG_MESSAGE=`git log -1 --pretty=%B`
            echo "Tag-Message: ${TAG_MESSAGE}"
            echo "Uploading release ${TRAVIS_TAG} to TER"
            $HOME/.composer/vendor/bin/ter-client upload crawler . -u "$TYPO3_ORG_USERNAME" -p "$TYPO3_ORG_PASSWORD" -m "$TAG_MESSAGE"
          fi;
